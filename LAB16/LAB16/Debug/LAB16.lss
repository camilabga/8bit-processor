
LAB16.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000098c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000918  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000003  00800100  00800100  0000098c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000098c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000009bc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000040  00000000  00000000  000009fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000083c  00000000  00000000  00000a3c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006c0  00000000  00000000  00001278  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000430  00000000  00000000  00001938  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000e4  00000000  00000000  00001d68  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000038b  00000000  00000000  00001e4c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000027b  00000000  00000000  000021d7  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000090  00000000  00000000  00002452  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 43 00 	jmp	0x86	; 0x86 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	05 a8       	ldd	r0, Z+53	; 0x35
  6a:	4c cd       	rjmp	.-1384   	; 0xfffffb04 <__eeprom_end+0xff7efb04>
  6c:	b2 d4       	rcall	.+2404   	; 0x9d2 <_etext+0xba>
  6e:	4e b9       	out	0x0e, r20	; 14
  70:	38 36       	cpi	r19, 0x68	; 104
  72:	a9 02       	muls	r26, r25
  74:	0c 50       	subi	r16, 0x0C	; 12
  76:	b9 91       	ld	r27, Y+
  78:	86 88       	ldd	r8, Z+22	; 0x16
  7a:	08 3c       	cpi	r16, 0xC8	; 200
  7c:	a6 aa       	std	Z+54, r10	; 0x36
  7e:	aa 2a       	or	r10, r26
  80:	be 00       	.word	0x00be	; ????
  82:	00 00       	nop
  84:	80 3f       	cpi	r24, 0xF0	; 240

00000086 <__ctors_end>:
  86:	11 24       	eor	r1, r1
  88:	1f be       	out	0x3f, r1	; 63
  8a:	cf ef       	ldi	r28, 0xFF	; 255
  8c:	d8 e0       	ldi	r29, 0x08	; 8
  8e:	de bf       	out	0x3e, r29	; 62
  90:	cd bf       	out	0x3d, r28	; 61

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	a0 e0       	ldi	r26, 0x00	; 0
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a3 30       	cpi	r26, 0x03	; 3
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 b4 01 	call	0x368	; 0x368 <main>
  a6:	0c 94 8a 04 	jmp	0x914	; 0x914 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <senoide>:

unsigned char x ;
unsigned char x1;
unsigned char x2;

void senoide(){
  ae:	cf 92       	push	r12
  b0:	df 92       	push	r13
  b2:	ef 92       	push	r14
  b4:	ff 92       	push	r15
  b6:	0f 93       	push	r16
  b8:	1f 93       	push	r17
  ba:	cf 93       	push	r28
  bc:	df 93       	push	r29
  be:	c1 2c       	mov	r12, r1
  c0:	d1 2c       	mov	r13, r1
  c2:	76 01       	movw	r14, r12
  c4:	c0 e0       	ldi	r28, 0x00	; 0
  c6:	d0 e0       	ldi	r29, 0x00	; 0
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  c8:	03 e0       	ldi	r16, 0x03	; 3
  ca:	10 e0       	ldi	r17, 0x00	; 0
	x = 0;
	for(int i=0; i<=FREQ; i++){
		x = sin((i/FREQ) * 2*C_PI)*127+127;
  cc:	20 e0       	ldi	r18, 0x00	; 0
  ce:	30 e0       	ldi	r19, 0x00	; 0
  d0:	4a eb       	ldi	r20, 0xBA	; 186
  d2:	52 e4       	ldi	r21, 0x42	; 66
  d4:	c7 01       	movw	r24, r14
  d6:	b6 01       	movw	r22, r12
  d8:	0e 94 3a 02 	call	0x474	; 0x474 <__divsf3>
  dc:	9b 01       	movw	r18, r22
  de:	ac 01       	movw	r20, r24
  e0:	0e 94 c9 01 	call	0x392	; 0x392 <__addsf3>
  e4:	26 e5       	ldi	r18, 0x56	; 86
  e6:	3e e0       	ldi	r19, 0x0E	; 14
  e8:	49 e4       	ldi	r20, 0x49	; 73
  ea:	50 e4       	ldi	r21, 0x40	; 64
  ec:	0e 94 8d 03 	call	0x71a	; 0x71a <__mulsf3>
  f0:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <sin>
  f4:	20 e0       	ldi	r18, 0x00	; 0
  f6:	30 e0       	ldi	r19, 0x00	; 0
  f8:	4e ef       	ldi	r20, 0xFE	; 254
  fa:	52 e4       	ldi	r21, 0x42	; 66
  fc:	0e 94 8d 03 	call	0x71a	; 0x71a <__mulsf3>
 100:	20 e0       	ldi	r18, 0x00	; 0
 102:	30 e0       	ldi	r19, 0x00	; 0
 104:	4e ef       	ldi	r20, 0xFE	; 254
 106:	52 e4       	ldi	r21, 0x42	; 66
 108:	0e 94 c9 01 	call	0x392	; 0x392 <__addsf3>
 10c:	0e 94 ac 02 	call	0x558	; 0x558 <__fixunssfsi>
 110:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <_edata>
		
		x1 = x;
		x2 = x;
		
		x1 = x1*4 ;
 114:	86 2f       	mov	r24, r22
 116:	88 0f       	add	r24, r24
 118:	88 0f       	add	r24, r24
 11a:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <x1>
		x2 = x2/64;
 11e:	62 95       	swap	r22
 120:	66 95       	lsr	r22
 122:	66 95       	lsr	r22
 124:	63 70       	andi	r22, 0x03	; 3
 126:	60 93 01 01 	sts	0x0101, r22	; 0x800101 <x2>
		
		PORTD = x1;
 12a:	8b b9       	out	0x0b, r24	; 11
		PORTB = x2;
 12c:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <x2>
 130:	85 b9       	out	0x05, r24	; 5
		
		if(PINC != 0b00000000){
 132:	86 b1       	in	r24, 0x06	; 6
 134:	81 11       	cpse	r24, r1
 136:	16 c0       	rjmp	.+44     	; 0x164 <senoide+0xb6>
 138:	c8 01       	movw	r24, r16
 13a:	01 97       	sbiw	r24, 0x01	; 1
 13c:	f1 f7       	brne	.-4      	; 0x13a <senoide+0x8c>
unsigned char x1;
unsigned char x2;

void senoide(){
	x = 0;
	for(int i=0; i<=FREQ; i++){
 13e:	21 96       	adiw	r28, 0x01	; 1
 140:	be 01       	movw	r22, r28
 142:	0d 2e       	mov	r0, r29
 144:	00 0c       	add	r0, r0
 146:	88 0b       	sbc	r24, r24
 148:	99 0b       	sbc	r25, r25
 14a:	0e 94 dd 02 	call	0x5ba	; 0x5ba <__floatsisf>
 14e:	6b 01       	movw	r12, r22
 150:	7c 01       	movw	r14, r24
 152:	20 e0       	ldi	r18, 0x00	; 0
 154:	30 e0       	ldi	r19, 0x00	; 0
 156:	4a eb       	ldi	r20, 0xBA	; 186
 158:	52 e4       	ldi	r21, 0x42	; 66
 15a:	0e 94 35 02 	call	0x46a	; 0x46a <__cmpsf2>
 15e:	18 16       	cp	r1, r24
 160:	0c f0       	brlt	.+2      	; 0x164 <senoide+0xb6>
 162:	b4 cf       	rjmp	.-152    	; 0xcc <senoide+0x1e>
		}
		
		_delay_loop_2(3);
	
	}
}
 164:	df 91       	pop	r29
 166:	cf 91       	pop	r28
 168:	1f 91       	pop	r17
 16a:	0f 91       	pop	r16
 16c:	ff 90       	pop	r15
 16e:	ef 90       	pop	r14
 170:	df 90       	pop	r13
 172:	cf 90       	pop	r12
 174:	08 95       	ret

00000176 <quadrada>:

void quadrada(){
 176:	bf 92       	push	r11
 178:	cf 92       	push	r12
 17a:	df 92       	push	r13
 17c:	ef 92       	push	r14
 17e:	ff 92       	push	r15
 180:	0f 93       	push	r16
 182:	1f 93       	push	r17
 184:	cf 93       	push	r28
 186:	df 93       	push	r29
	x = 0;
 188:	c1 2c       	mov	r12, r1
 18a:	d1 2c       	mov	r13, r1
 18c:	76 01       	movw	r14, r12
 18e:	c0 e0       	ldi	r28, 0x00	; 0
 190:	d0 e0       	ldi	r29, 0x00	; 0
	for(int i=0;i<=FREQ;i++){
		if(i<(FREQ/2)){
			x = 255;
 192:	bb 24       	eor	r11, r11
 194:	ba 94       	dec	r11
 196:	0e e9       	ldi	r16, 0x9E	; 158
 198:	12 e0       	ldi	r17, 0x02	; 2
}

void quadrada(){
	x = 0;
	for(int i=0;i<=FREQ;i++){
		if(i<(FREQ/2)){
 19a:	20 e0       	ldi	r18, 0x00	; 0
 19c:	30 e0       	ldi	r19, 0x00	; 0
 19e:	4a e3       	ldi	r20, 0x3A	; 58
 1a0:	52 e4       	ldi	r21, 0x42	; 66
 1a2:	c7 01       	movw	r24, r14
 1a4:	b6 01       	movw	r22, r12
 1a6:	0e 94 35 02 	call	0x46a	; 0x46a <__cmpsf2>
			x = 255;
			}else{
			x = 0;
 1aa:	88 0f       	add	r24, r24
 1ac:	88 0b       	sbc	r24, r24
 1ae:	8b 21       	and	r24, r11
 1b0:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
		}
		
		x1 = x;
		x2 = x;
		
		x1 = x1*4 ;
 1b4:	98 2f       	mov	r25, r24
 1b6:	99 0f       	add	r25, r25
 1b8:	99 0f       	add	r25, r25
 1ba:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <x1>
		x2 = x2/64;
 1be:	82 95       	swap	r24
 1c0:	86 95       	lsr	r24
 1c2:	86 95       	lsr	r24
 1c4:	83 70       	andi	r24, 0x03	; 3
 1c6:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <x2>
		
		PORTD = x1;
 1ca:	9b b9       	out	0x0b, r25	; 11
		PORTB = x2;
 1cc:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <x2>
 1d0:	85 b9       	out	0x05, r24	; 5
		
		if(PINC != 0b00000001){
 1d2:	86 b1       	in	r24, 0x06	; 6
 1d4:	81 30       	cpi	r24, 0x01	; 1
 1d6:	a9 f4       	brne	.+42     	; 0x202 <quadrada+0x8c>
 1d8:	c8 01       	movw	r24, r16
 1da:	01 97       	sbiw	r24, 0x01	; 1
 1dc:	f1 f7       	brne	.-4      	; 0x1da <quadrada+0x64>
	}
}

void quadrada(){
	x = 0;
	for(int i=0;i<=FREQ;i++){
 1de:	21 96       	adiw	r28, 0x01	; 1
 1e0:	be 01       	movw	r22, r28
 1e2:	0d 2e       	mov	r0, r29
 1e4:	00 0c       	add	r0, r0
 1e6:	88 0b       	sbc	r24, r24
 1e8:	99 0b       	sbc	r25, r25
 1ea:	0e 94 dd 02 	call	0x5ba	; 0x5ba <__floatsisf>
 1ee:	6b 01       	movw	r12, r22
 1f0:	7c 01       	movw	r14, r24
 1f2:	20 e0       	ldi	r18, 0x00	; 0
 1f4:	30 e0       	ldi	r19, 0x00	; 0
 1f6:	4a eb       	ldi	r20, 0xBA	; 186
 1f8:	52 e4       	ldi	r21, 0x42	; 66
 1fa:	0e 94 35 02 	call	0x46a	; 0x46a <__cmpsf2>
 1fe:	18 16       	cp	r1, r24
 200:	64 f6       	brge	.-104    	; 0x19a <quadrada+0x24>
			break;
		}
		
		_delay_loop_2(670);
	}
}
 202:	df 91       	pop	r29
 204:	cf 91       	pop	r28
 206:	1f 91       	pop	r17
 208:	0f 91       	pop	r16
 20a:	ff 90       	pop	r15
 20c:	ef 90       	pop	r14
 20e:	df 90       	pop	r13
 210:	cf 90       	pop	r12
 212:	bf 90       	pop	r11
 214:	08 95       	ret

00000216 <triangular>:

void triangular(){
 216:	cf 92       	push	r12
 218:	df 92       	push	r13
 21a:	ef 92       	push	r14
 21c:	ff 92       	push	r15
 21e:	0f 93       	push	r16
 220:	1f 93       	push	r17
 222:	cf 93       	push	r28
 224:	df 93       	push	r29
	x = 0;
 226:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>
		x = (i/(FREQ/2))*255;
		
		x1 = x;
		x2 = x;
		
		x1 = x1*4 ;
 22a:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <x1>
		x2 = x2/64;
 22e:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <x2>
		
		PORTD = x1;
 232:	1b b8       	out	0x0b, r1	; 11
		PORTB = x2;
 234:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <x2>
 238:	85 b9       	out	0x05, r24	; 5
		
		if(PINC != 0b00000010){
 23a:	86 b1       	in	r24, 0x06	; 6
 23c:	82 30       	cpi	r24, 0x02	; 2
 23e:	09 f0       	breq	.+2      	; 0x242 <triangular+0x2c>
 240:	84 c0       	rjmp	.+264    	; 0x34a <triangular+0x134>
 242:	c0 e0       	ldi	r28, 0x00	; 0
 244:	d0 e0       	ldi	r29, 0x00	; 0
 246:	08 e0       	ldi	r16, 0x08	; 8
 248:	12 e0       	ldi	r17, 0x02	; 2
 24a:	25 c0       	rjmp	.+74     	; 0x296 <triangular+0x80>
}

void triangular(){
	x = 0;
	for(int i=0;i<=(FREQ/2);i++){
		x = (i/(FREQ/2))*255;
 24c:	20 e0       	ldi	r18, 0x00	; 0
 24e:	30 e0       	ldi	r19, 0x00	; 0
 250:	4a e3       	ldi	r20, 0x3A	; 58
 252:	52 e4       	ldi	r21, 0x42	; 66
 254:	c7 01       	movw	r24, r14
 256:	b6 01       	movw	r22, r12
 258:	0e 94 3a 02 	call	0x474	; 0x474 <__divsf3>
 25c:	20 e0       	ldi	r18, 0x00	; 0
 25e:	30 e0       	ldi	r19, 0x00	; 0
 260:	4f e7       	ldi	r20, 0x7F	; 127
 262:	53 e4       	ldi	r21, 0x43	; 67
 264:	0e 94 8d 03 	call	0x71a	; 0x71a <__mulsf3>
 268:	0e 94 ac 02 	call	0x558	; 0x558 <__fixunssfsi>
 26c:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <_edata>
		
		x1 = x;
		x2 = x;
		
		x1 = x1*4 ;
 270:	86 2f       	mov	r24, r22
 272:	88 0f       	add	r24, r24
 274:	88 0f       	add	r24, r24
 276:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <x1>
		x2 = x2/64;
 27a:	62 95       	swap	r22
 27c:	66 95       	lsr	r22
 27e:	66 95       	lsr	r22
 280:	63 70       	andi	r22, 0x03	; 3
 282:	60 93 01 01 	sts	0x0101, r22	; 0x800101 <x2>
		
		PORTD = x1;
 286:	8b b9       	out	0x0b, r24	; 11
		PORTB = x2;
 288:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <x2>
 28c:	85 b9       	out	0x05, r24	; 5
		
		if(PINC != 0b00000010){
 28e:	86 b1       	in	r24, 0x06	; 6
 290:	82 30       	cpi	r24, 0x02	; 2
 292:	09 f0       	breq	.+2      	; 0x296 <triangular+0x80>
 294:	5a c0       	rjmp	.+180    	; 0x34a <triangular+0x134>
 296:	c8 01       	movw	r24, r16
 298:	01 97       	sbiw	r24, 0x01	; 1
 29a:	f1 f7       	brne	.-4      	; 0x298 <triangular+0x82>
	}
}

void triangular(){
	x = 0;
	for(int i=0;i<=(FREQ/2);i++){
 29c:	21 96       	adiw	r28, 0x01	; 1
 29e:	be 01       	movw	r22, r28
 2a0:	0d 2e       	mov	r0, r29
 2a2:	00 0c       	add	r0, r0
 2a4:	88 0b       	sbc	r24, r24
 2a6:	99 0b       	sbc	r25, r25
 2a8:	0e 94 dd 02 	call	0x5ba	; 0x5ba <__floatsisf>
 2ac:	6b 01       	movw	r12, r22
 2ae:	7c 01       	movw	r14, r24
 2b0:	20 e0       	ldi	r18, 0x00	; 0
 2b2:	30 e0       	ldi	r19, 0x00	; 0
 2b4:	4a e3       	ldi	r20, 0x3A	; 58
 2b6:	52 e4       	ldi	r21, 0x42	; 66
 2b8:	0e 94 35 02 	call	0x46a	; 0x46a <__cmpsf2>
 2bc:	18 16       	cp	r1, r24
 2be:	34 f6       	brge	.-116    	; 0x24c <triangular+0x36>
 2c0:	2f c0       	rjmp	.+94     	; 0x320 <triangular+0x10a>
		
		_delay_loop_2(520);
	}
	
	for(int i=FREQ/2;i>=0;i--){
		x = (i/(FREQ/2))*255;
 2c2:	be 01       	movw	r22, r28
 2c4:	0d 2e       	mov	r0, r29
 2c6:	00 0c       	add	r0, r0
 2c8:	88 0b       	sbc	r24, r24
 2ca:	99 0b       	sbc	r25, r25
 2cc:	0e 94 dd 02 	call	0x5ba	; 0x5ba <__floatsisf>
 2d0:	20 e0       	ldi	r18, 0x00	; 0
 2d2:	30 e0       	ldi	r19, 0x00	; 0
 2d4:	4a e3       	ldi	r20, 0x3A	; 58
 2d6:	52 e4       	ldi	r21, 0x42	; 66
 2d8:	0e 94 3a 02 	call	0x474	; 0x474 <__divsf3>
 2dc:	20 e0       	ldi	r18, 0x00	; 0
 2de:	30 e0       	ldi	r19, 0x00	; 0
 2e0:	4f e7       	ldi	r20, 0x7F	; 127
 2e2:	53 e4       	ldi	r21, 0x43	; 67
 2e4:	0e 94 8d 03 	call	0x71a	; 0x71a <__mulsf3>
 2e8:	0e 94 ac 02 	call	0x558	; 0x558 <__fixunssfsi>
 2ec:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <_edata>
		
		x1 = x;
		x2 = x;
		
		x1 = x1*4 ;
 2f0:	86 2f       	mov	r24, r22
 2f2:	88 0f       	add	r24, r24
 2f4:	88 0f       	add	r24, r24
 2f6:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <x1>
		x2 = x2/64;
 2fa:	62 95       	swap	r22
 2fc:	66 95       	lsr	r22
 2fe:	66 95       	lsr	r22
 300:	63 70       	andi	r22, 0x03	; 3
 302:	60 93 01 01 	sts	0x0101, r22	; 0x800101 <x2>
		
		PORTD = x1;
 306:	8b b9       	out	0x0b, r24	; 11
		PORTB = x2;
 308:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <x2>
 30c:	85 b9       	out	0x05, r24	; 5
		
		if(PINC != 0b00000010){
 30e:	86 b1       	in	r24, 0x06	; 6
 310:	82 30       	cpi	r24, 0x02	; 2
 312:	d9 f4       	brne	.+54     	; 0x34a <triangular+0x134>
 314:	c8 01       	movw	r24, r16
 316:	01 97       	sbiw	r24, 0x01	; 1
 318:	f1 f7       	brne	.-4      	; 0x316 <triangular+0x100>
		}
		
		_delay_loop_2(520);
	}
	
	for(int i=FREQ/2;i>=0;i--){
 31a:	21 97       	sbiw	r28, 0x01	; 1
 31c:	90 f6       	brcc	.-92     	; 0x2c2 <triangular+0xac>
 31e:	15 c0       	rjmp	.+42     	; 0x34a <triangular+0x134>
		x = (i/(FREQ/2))*255;
 320:	8c ef       	ldi	r24, 0xFC	; 252
 322:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
		
		x1 = x;
		x2 = x;
		
		x1 = x1*4 ;
 326:	80 ef       	ldi	r24, 0xF0	; 240
 328:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <x1>
		x2 = x2/64;
 32c:	93 e0       	ldi	r25, 0x03	; 3
 32e:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <x2>
		
		PORTD = x1;
 332:	8b b9       	out	0x0b, r24	; 11
		PORTB = x2;
 334:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <x2>
 338:	85 b9       	out	0x05, r24	; 5
		
		if(PINC != 0b00000010){
 33a:	86 b1       	in	r24, 0x06	; 6
 33c:	82 30       	cpi	r24, 0x02	; 2
 33e:	29 f4       	brne	.+10     	; 0x34a <triangular+0x134>
 340:	ce e2       	ldi	r28, 0x2E	; 46
 342:	d0 e0       	ldi	r29, 0x00	; 0
 344:	08 e0       	ldi	r16, 0x08	; 8
 346:	12 e0       	ldi	r17, 0x02	; 2
 348:	e5 cf       	rjmp	.-54     	; 0x314 <triangular+0xfe>
			break;
		}
		
		_delay_loop_2(520);
	}
}
 34a:	df 91       	pop	r29
 34c:	cf 91       	pop	r28
 34e:	1f 91       	pop	r17
 350:	0f 91       	pop	r16
 352:	ff 90       	pop	r15
 354:	ef 90       	pop	r14
 356:	df 90       	pop	r13
 358:	cf 90       	pop	r12
 35a:	08 95       	ret

0000035c <setup>:

void setup(){
	DDRB = 0b00000011;
 35c:	83 e0       	ldi	r24, 0x03	; 3
 35e:	84 b9       	out	0x04, r24	; 4
	DDRC = 0b11111100;
 360:	8c ef       	ldi	r24, 0xFC	; 252
 362:	87 b9       	out	0x07, r24	; 7
	DDRD = 0b11111100;
 364:	8a b9       	out	0x0a, r24	; 10
 366:	08 95       	ret

00000368 <main>:
}

int main(void){
	setup();
 368:	0e 94 ae 01 	call	0x35c	; 0x35c <setup>
	
    while (1) {
		if(PINC == 0b00000000){
 36c:	86 b1       	in	r24, 0x06	; 6
 36e:	81 11       	cpse	r24, r1
 370:	03 c0       	rjmp	.+6      	; 0x378 <main+0x10>
			senoide();
 372:	0e 94 57 00 	call	0xae	; 0xae <senoide>
 376:	fa cf       	rjmp	.-12     	; 0x36c <main+0x4>
		} else if(PINC == 0b00000001) {
 378:	86 b1       	in	r24, 0x06	; 6
 37a:	81 30       	cpi	r24, 0x01	; 1
 37c:	19 f4       	brne	.+6      	; 0x384 <main+0x1c>
			quadrada();
 37e:	0e 94 bb 00 	call	0x176	; 0x176 <quadrada>
 382:	f4 cf       	rjmp	.-24     	; 0x36c <main+0x4>
		} else if(PINC == 0b00000010) {
 384:	86 b1       	in	r24, 0x06	; 6
 386:	82 30       	cpi	r24, 0x02	; 2
 388:	89 f7       	brne	.-30     	; 0x36c <main+0x4>
			triangular();
 38a:	0e 94 0b 01 	call	0x216	; 0x216 <triangular>
 38e:	ee cf       	rjmp	.-36     	; 0x36c <main+0x4>

00000390 <__subsf3>:
 390:	50 58       	subi	r21, 0x80	; 128

00000392 <__addsf3>:
 392:	bb 27       	eor	r27, r27
 394:	aa 27       	eor	r26, r26
 396:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <__addsf3x>
 39a:	0c 94 53 03 	jmp	0x6a6	; 0x6a6 <__fp_round>
 39e:	0e 94 45 03 	call	0x68a	; 0x68a <__fp_pscA>
 3a2:	38 f0       	brcs	.+14     	; 0x3b2 <__addsf3+0x20>
 3a4:	0e 94 4c 03 	call	0x698	; 0x698 <__fp_pscB>
 3a8:	20 f0       	brcs	.+8      	; 0x3b2 <__addsf3+0x20>
 3aa:	39 f4       	brne	.+14     	; 0x3ba <__addsf3+0x28>
 3ac:	9f 3f       	cpi	r25, 0xFF	; 255
 3ae:	19 f4       	brne	.+6      	; 0x3b6 <__addsf3+0x24>
 3b0:	26 f4       	brtc	.+8      	; 0x3ba <__addsf3+0x28>
 3b2:	0c 94 42 03 	jmp	0x684	; 0x684 <__fp_nan>
 3b6:	0e f4       	brtc	.+2      	; 0x3ba <__addsf3+0x28>
 3b8:	e0 95       	com	r30
 3ba:	e7 fb       	bst	r30, 7
 3bc:	0c 94 3c 03 	jmp	0x678	; 0x678 <__fp_inf>

000003c0 <__addsf3x>:
 3c0:	e9 2f       	mov	r30, r25
 3c2:	0e 94 64 03 	call	0x6c8	; 0x6c8 <__fp_split3>
 3c6:	58 f3       	brcs	.-42     	; 0x39e <__addsf3+0xc>
 3c8:	ba 17       	cp	r27, r26
 3ca:	62 07       	cpc	r22, r18
 3cc:	73 07       	cpc	r23, r19
 3ce:	84 07       	cpc	r24, r20
 3d0:	95 07       	cpc	r25, r21
 3d2:	20 f0       	brcs	.+8      	; 0x3dc <__addsf3x+0x1c>
 3d4:	79 f4       	brne	.+30     	; 0x3f4 <__addsf3x+0x34>
 3d6:	a6 f5       	brtc	.+104    	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
 3d8:	0c 94 86 03 	jmp	0x70c	; 0x70c <__fp_zero>
 3dc:	0e f4       	brtc	.+2      	; 0x3e0 <__addsf3x+0x20>
 3de:	e0 95       	com	r30
 3e0:	0b 2e       	mov	r0, r27
 3e2:	ba 2f       	mov	r27, r26
 3e4:	a0 2d       	mov	r26, r0
 3e6:	0b 01       	movw	r0, r22
 3e8:	b9 01       	movw	r22, r18
 3ea:	90 01       	movw	r18, r0
 3ec:	0c 01       	movw	r0, r24
 3ee:	ca 01       	movw	r24, r20
 3f0:	a0 01       	movw	r20, r0
 3f2:	11 24       	eor	r1, r1
 3f4:	ff 27       	eor	r31, r31
 3f6:	59 1b       	sub	r21, r25
 3f8:	99 f0       	breq	.+38     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 3fa:	59 3f       	cpi	r21, 0xF9	; 249
 3fc:	50 f4       	brcc	.+20     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 3fe:	50 3e       	cpi	r21, 0xE0	; 224
 400:	68 f1       	brcs	.+90     	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
 402:	1a 16       	cp	r1, r26
 404:	f0 40       	sbci	r31, 0x00	; 0
 406:	a2 2f       	mov	r26, r18
 408:	23 2f       	mov	r18, r19
 40a:	34 2f       	mov	r19, r20
 40c:	44 27       	eor	r20, r20
 40e:	58 5f       	subi	r21, 0xF8	; 248
 410:	f3 cf       	rjmp	.-26     	; 0x3f8 <__addsf3x+0x38>
 412:	46 95       	lsr	r20
 414:	37 95       	ror	r19
 416:	27 95       	ror	r18
 418:	a7 95       	ror	r26
 41a:	f0 40       	sbci	r31, 0x00	; 0
 41c:	53 95       	inc	r21
 41e:	c9 f7       	brne	.-14     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 420:	7e f4       	brtc	.+30     	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
 422:	1f 16       	cp	r1, r31
 424:	ba 0b       	sbc	r27, r26
 426:	62 0b       	sbc	r22, r18
 428:	73 0b       	sbc	r23, r19
 42a:	84 0b       	sbc	r24, r20
 42c:	ba f0       	brmi	.+46     	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
 42e:	91 50       	subi	r25, 0x01	; 1
 430:	a1 f0       	breq	.+40     	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 432:	ff 0f       	add	r31, r31
 434:	bb 1f       	adc	r27, r27
 436:	66 1f       	adc	r22, r22
 438:	77 1f       	adc	r23, r23
 43a:	88 1f       	adc	r24, r24
 43c:	c2 f7       	brpl	.-16     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 43e:	0e c0       	rjmp	.+28     	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
 440:	ba 0f       	add	r27, r26
 442:	62 1f       	adc	r22, r18
 444:	73 1f       	adc	r23, r19
 446:	84 1f       	adc	r24, r20
 448:	48 f4       	brcc	.+18     	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
 44a:	87 95       	ror	r24
 44c:	77 95       	ror	r23
 44e:	67 95       	ror	r22
 450:	b7 95       	ror	r27
 452:	f7 95       	ror	r31
 454:	9e 3f       	cpi	r25, 0xFE	; 254
 456:	08 f0       	brcs	.+2      	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 458:	b0 cf       	rjmp	.-160    	; 0x3ba <__addsf3+0x28>
 45a:	93 95       	inc	r25
 45c:	88 0f       	add	r24, r24
 45e:	08 f0       	brcs	.+2      	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 460:	99 27       	eor	r25, r25
 462:	ee 0f       	add	r30, r30
 464:	97 95       	ror	r25
 466:	87 95       	ror	r24
 468:	08 95       	ret

0000046a <__cmpsf2>:
 46a:	0e 94 18 03 	call	0x630	; 0x630 <__fp_cmp>
 46e:	08 f4       	brcc	.+2      	; 0x472 <__cmpsf2+0x8>
 470:	81 e0       	ldi	r24, 0x01	; 1
 472:	08 95       	ret

00000474 <__divsf3>:
 474:	0e 94 4e 02 	call	0x49c	; 0x49c <__divsf3x>
 478:	0c 94 53 03 	jmp	0x6a6	; 0x6a6 <__fp_round>
 47c:	0e 94 4c 03 	call	0x698	; 0x698 <__fp_pscB>
 480:	58 f0       	brcs	.+22     	; 0x498 <__divsf3+0x24>
 482:	0e 94 45 03 	call	0x68a	; 0x68a <__fp_pscA>
 486:	40 f0       	brcs	.+16     	; 0x498 <__divsf3+0x24>
 488:	29 f4       	brne	.+10     	; 0x494 <__divsf3+0x20>
 48a:	5f 3f       	cpi	r21, 0xFF	; 255
 48c:	29 f0       	breq	.+10     	; 0x498 <__divsf3+0x24>
 48e:	0c 94 3c 03 	jmp	0x678	; 0x678 <__fp_inf>
 492:	51 11       	cpse	r21, r1
 494:	0c 94 87 03 	jmp	0x70e	; 0x70e <__fp_szero>
 498:	0c 94 42 03 	jmp	0x684	; 0x684 <__fp_nan>

0000049c <__divsf3x>:
 49c:	0e 94 64 03 	call	0x6c8	; 0x6c8 <__fp_split3>
 4a0:	68 f3       	brcs	.-38     	; 0x47c <__divsf3+0x8>

000004a2 <__divsf3_pse>:
 4a2:	99 23       	and	r25, r25
 4a4:	b1 f3       	breq	.-20     	; 0x492 <__divsf3+0x1e>
 4a6:	55 23       	and	r21, r21
 4a8:	91 f3       	breq	.-28     	; 0x48e <__divsf3+0x1a>
 4aa:	95 1b       	sub	r25, r21
 4ac:	55 0b       	sbc	r21, r21
 4ae:	bb 27       	eor	r27, r27
 4b0:	aa 27       	eor	r26, r26
 4b2:	62 17       	cp	r22, r18
 4b4:	73 07       	cpc	r23, r19
 4b6:	84 07       	cpc	r24, r20
 4b8:	38 f0       	brcs	.+14     	; 0x4c8 <__divsf3_pse+0x26>
 4ba:	9f 5f       	subi	r25, 0xFF	; 255
 4bc:	5f 4f       	sbci	r21, 0xFF	; 255
 4be:	22 0f       	add	r18, r18
 4c0:	33 1f       	adc	r19, r19
 4c2:	44 1f       	adc	r20, r20
 4c4:	aa 1f       	adc	r26, r26
 4c6:	a9 f3       	breq	.-22     	; 0x4b2 <__divsf3_pse+0x10>
 4c8:	35 d0       	rcall	.+106    	; 0x534 <__divsf3_pse+0x92>
 4ca:	0e 2e       	mov	r0, r30
 4cc:	3a f0       	brmi	.+14     	; 0x4dc <__divsf3_pse+0x3a>
 4ce:	e0 e8       	ldi	r30, 0x80	; 128
 4d0:	32 d0       	rcall	.+100    	; 0x536 <__divsf3_pse+0x94>
 4d2:	91 50       	subi	r25, 0x01	; 1
 4d4:	50 40       	sbci	r21, 0x00	; 0
 4d6:	e6 95       	lsr	r30
 4d8:	00 1c       	adc	r0, r0
 4da:	ca f7       	brpl	.-14     	; 0x4ce <__divsf3_pse+0x2c>
 4dc:	2b d0       	rcall	.+86     	; 0x534 <__divsf3_pse+0x92>
 4de:	fe 2f       	mov	r31, r30
 4e0:	29 d0       	rcall	.+82     	; 0x534 <__divsf3_pse+0x92>
 4e2:	66 0f       	add	r22, r22
 4e4:	77 1f       	adc	r23, r23
 4e6:	88 1f       	adc	r24, r24
 4e8:	bb 1f       	adc	r27, r27
 4ea:	26 17       	cp	r18, r22
 4ec:	37 07       	cpc	r19, r23
 4ee:	48 07       	cpc	r20, r24
 4f0:	ab 07       	cpc	r26, r27
 4f2:	b0 e8       	ldi	r27, 0x80	; 128
 4f4:	09 f0       	breq	.+2      	; 0x4f8 <__divsf3_pse+0x56>
 4f6:	bb 0b       	sbc	r27, r27
 4f8:	80 2d       	mov	r24, r0
 4fa:	bf 01       	movw	r22, r30
 4fc:	ff 27       	eor	r31, r31
 4fe:	93 58       	subi	r25, 0x83	; 131
 500:	5f 4f       	sbci	r21, 0xFF	; 255
 502:	3a f0       	brmi	.+14     	; 0x512 <__divsf3_pse+0x70>
 504:	9e 3f       	cpi	r25, 0xFE	; 254
 506:	51 05       	cpc	r21, r1
 508:	78 f0       	brcs	.+30     	; 0x528 <__divsf3_pse+0x86>
 50a:	0c 94 3c 03 	jmp	0x678	; 0x678 <__fp_inf>
 50e:	0c 94 87 03 	jmp	0x70e	; 0x70e <__fp_szero>
 512:	5f 3f       	cpi	r21, 0xFF	; 255
 514:	e4 f3       	brlt	.-8      	; 0x50e <__divsf3_pse+0x6c>
 516:	98 3e       	cpi	r25, 0xE8	; 232
 518:	d4 f3       	brlt	.-12     	; 0x50e <__divsf3_pse+0x6c>
 51a:	86 95       	lsr	r24
 51c:	77 95       	ror	r23
 51e:	67 95       	ror	r22
 520:	b7 95       	ror	r27
 522:	f7 95       	ror	r31
 524:	9f 5f       	subi	r25, 0xFF	; 255
 526:	c9 f7       	brne	.-14     	; 0x51a <__divsf3_pse+0x78>
 528:	88 0f       	add	r24, r24
 52a:	91 1d       	adc	r25, r1
 52c:	96 95       	lsr	r25
 52e:	87 95       	ror	r24
 530:	97 f9       	bld	r25, 7
 532:	08 95       	ret
 534:	e1 e0       	ldi	r30, 0x01	; 1
 536:	66 0f       	add	r22, r22
 538:	77 1f       	adc	r23, r23
 53a:	88 1f       	adc	r24, r24
 53c:	bb 1f       	adc	r27, r27
 53e:	62 17       	cp	r22, r18
 540:	73 07       	cpc	r23, r19
 542:	84 07       	cpc	r24, r20
 544:	ba 07       	cpc	r27, r26
 546:	20 f0       	brcs	.+8      	; 0x550 <__divsf3_pse+0xae>
 548:	62 1b       	sub	r22, r18
 54a:	73 0b       	sbc	r23, r19
 54c:	84 0b       	sbc	r24, r20
 54e:	ba 0b       	sbc	r27, r26
 550:	ee 1f       	adc	r30, r30
 552:	88 f7       	brcc	.-30     	; 0x536 <__divsf3_pse+0x94>
 554:	e0 95       	com	r30
 556:	08 95       	ret

00000558 <__fixunssfsi>:
 558:	0e 94 6c 03 	call	0x6d8	; 0x6d8 <__fp_splitA>
 55c:	88 f0       	brcs	.+34     	; 0x580 <__fixunssfsi+0x28>
 55e:	9f 57       	subi	r25, 0x7F	; 127
 560:	98 f0       	brcs	.+38     	; 0x588 <__fixunssfsi+0x30>
 562:	b9 2f       	mov	r27, r25
 564:	99 27       	eor	r25, r25
 566:	b7 51       	subi	r27, 0x17	; 23
 568:	b0 f0       	brcs	.+44     	; 0x596 <__fixunssfsi+0x3e>
 56a:	e1 f0       	breq	.+56     	; 0x5a4 <__fixunssfsi+0x4c>
 56c:	66 0f       	add	r22, r22
 56e:	77 1f       	adc	r23, r23
 570:	88 1f       	adc	r24, r24
 572:	99 1f       	adc	r25, r25
 574:	1a f0       	brmi	.+6      	; 0x57c <__fixunssfsi+0x24>
 576:	ba 95       	dec	r27
 578:	c9 f7       	brne	.-14     	; 0x56c <__fixunssfsi+0x14>
 57a:	14 c0       	rjmp	.+40     	; 0x5a4 <__fixunssfsi+0x4c>
 57c:	b1 30       	cpi	r27, 0x01	; 1
 57e:	91 f0       	breq	.+36     	; 0x5a4 <__fixunssfsi+0x4c>
 580:	0e 94 86 03 	call	0x70c	; 0x70c <__fp_zero>
 584:	b1 e0       	ldi	r27, 0x01	; 1
 586:	08 95       	ret
 588:	0c 94 86 03 	jmp	0x70c	; 0x70c <__fp_zero>
 58c:	67 2f       	mov	r22, r23
 58e:	78 2f       	mov	r23, r24
 590:	88 27       	eor	r24, r24
 592:	b8 5f       	subi	r27, 0xF8	; 248
 594:	39 f0       	breq	.+14     	; 0x5a4 <__fixunssfsi+0x4c>
 596:	b9 3f       	cpi	r27, 0xF9	; 249
 598:	cc f3       	brlt	.-14     	; 0x58c <__fixunssfsi+0x34>
 59a:	86 95       	lsr	r24
 59c:	77 95       	ror	r23
 59e:	67 95       	ror	r22
 5a0:	b3 95       	inc	r27
 5a2:	d9 f7       	brne	.-10     	; 0x59a <__fixunssfsi+0x42>
 5a4:	3e f4       	brtc	.+14     	; 0x5b4 <__fixunssfsi+0x5c>
 5a6:	90 95       	com	r25
 5a8:	80 95       	com	r24
 5aa:	70 95       	com	r23
 5ac:	61 95       	neg	r22
 5ae:	7f 4f       	sbci	r23, 0xFF	; 255
 5b0:	8f 4f       	sbci	r24, 0xFF	; 255
 5b2:	9f 4f       	sbci	r25, 0xFF	; 255
 5b4:	08 95       	ret

000005b6 <__floatunsisf>:
 5b6:	e8 94       	clt
 5b8:	09 c0       	rjmp	.+18     	; 0x5cc <__floatsisf+0x12>

000005ba <__floatsisf>:
 5ba:	97 fb       	bst	r25, 7
 5bc:	3e f4       	brtc	.+14     	; 0x5cc <__floatsisf+0x12>
 5be:	90 95       	com	r25
 5c0:	80 95       	com	r24
 5c2:	70 95       	com	r23
 5c4:	61 95       	neg	r22
 5c6:	7f 4f       	sbci	r23, 0xFF	; 255
 5c8:	8f 4f       	sbci	r24, 0xFF	; 255
 5ca:	9f 4f       	sbci	r25, 0xFF	; 255
 5cc:	99 23       	and	r25, r25
 5ce:	a9 f0       	breq	.+42     	; 0x5fa <__floatsisf+0x40>
 5d0:	f9 2f       	mov	r31, r25
 5d2:	96 e9       	ldi	r25, 0x96	; 150
 5d4:	bb 27       	eor	r27, r27
 5d6:	93 95       	inc	r25
 5d8:	f6 95       	lsr	r31
 5da:	87 95       	ror	r24
 5dc:	77 95       	ror	r23
 5de:	67 95       	ror	r22
 5e0:	b7 95       	ror	r27
 5e2:	f1 11       	cpse	r31, r1
 5e4:	f8 cf       	rjmp	.-16     	; 0x5d6 <__floatsisf+0x1c>
 5e6:	fa f4       	brpl	.+62     	; 0x626 <__floatsisf+0x6c>
 5e8:	bb 0f       	add	r27, r27
 5ea:	11 f4       	brne	.+4      	; 0x5f0 <__floatsisf+0x36>
 5ec:	60 ff       	sbrs	r22, 0
 5ee:	1b c0       	rjmp	.+54     	; 0x626 <__floatsisf+0x6c>
 5f0:	6f 5f       	subi	r22, 0xFF	; 255
 5f2:	7f 4f       	sbci	r23, 0xFF	; 255
 5f4:	8f 4f       	sbci	r24, 0xFF	; 255
 5f6:	9f 4f       	sbci	r25, 0xFF	; 255
 5f8:	16 c0       	rjmp	.+44     	; 0x626 <__floatsisf+0x6c>
 5fa:	88 23       	and	r24, r24
 5fc:	11 f0       	breq	.+4      	; 0x602 <__floatsisf+0x48>
 5fe:	96 e9       	ldi	r25, 0x96	; 150
 600:	11 c0       	rjmp	.+34     	; 0x624 <__floatsisf+0x6a>
 602:	77 23       	and	r23, r23
 604:	21 f0       	breq	.+8      	; 0x60e <__floatsisf+0x54>
 606:	9e e8       	ldi	r25, 0x8E	; 142
 608:	87 2f       	mov	r24, r23
 60a:	76 2f       	mov	r23, r22
 60c:	05 c0       	rjmp	.+10     	; 0x618 <__floatsisf+0x5e>
 60e:	66 23       	and	r22, r22
 610:	71 f0       	breq	.+28     	; 0x62e <__floatsisf+0x74>
 612:	96 e8       	ldi	r25, 0x86	; 134
 614:	86 2f       	mov	r24, r22
 616:	70 e0       	ldi	r23, 0x00	; 0
 618:	60 e0       	ldi	r22, 0x00	; 0
 61a:	2a f0       	brmi	.+10     	; 0x626 <__floatsisf+0x6c>
 61c:	9a 95       	dec	r25
 61e:	66 0f       	add	r22, r22
 620:	77 1f       	adc	r23, r23
 622:	88 1f       	adc	r24, r24
 624:	da f7       	brpl	.-10     	; 0x61c <__floatsisf+0x62>
 626:	88 0f       	add	r24, r24
 628:	96 95       	lsr	r25
 62a:	87 95       	ror	r24
 62c:	97 f9       	bld	r25, 7
 62e:	08 95       	ret

00000630 <__fp_cmp>:
 630:	99 0f       	add	r25, r25
 632:	00 08       	sbc	r0, r0
 634:	55 0f       	add	r21, r21
 636:	aa 0b       	sbc	r26, r26
 638:	e0 e8       	ldi	r30, 0x80	; 128
 63a:	fe ef       	ldi	r31, 0xFE	; 254
 63c:	16 16       	cp	r1, r22
 63e:	17 06       	cpc	r1, r23
 640:	e8 07       	cpc	r30, r24
 642:	f9 07       	cpc	r31, r25
 644:	c0 f0       	brcs	.+48     	; 0x676 <__fp_cmp+0x46>
 646:	12 16       	cp	r1, r18
 648:	13 06       	cpc	r1, r19
 64a:	e4 07       	cpc	r30, r20
 64c:	f5 07       	cpc	r31, r21
 64e:	98 f0       	brcs	.+38     	; 0x676 <__fp_cmp+0x46>
 650:	62 1b       	sub	r22, r18
 652:	73 0b       	sbc	r23, r19
 654:	84 0b       	sbc	r24, r20
 656:	95 0b       	sbc	r25, r21
 658:	39 f4       	brne	.+14     	; 0x668 <__fp_cmp+0x38>
 65a:	0a 26       	eor	r0, r26
 65c:	61 f0       	breq	.+24     	; 0x676 <__fp_cmp+0x46>
 65e:	23 2b       	or	r18, r19
 660:	24 2b       	or	r18, r20
 662:	25 2b       	or	r18, r21
 664:	21 f4       	brne	.+8      	; 0x66e <__fp_cmp+0x3e>
 666:	08 95       	ret
 668:	0a 26       	eor	r0, r26
 66a:	09 f4       	brne	.+2      	; 0x66e <__fp_cmp+0x3e>
 66c:	a1 40       	sbci	r26, 0x01	; 1
 66e:	a6 95       	lsr	r26
 670:	8f ef       	ldi	r24, 0xFF	; 255
 672:	81 1d       	adc	r24, r1
 674:	81 1d       	adc	r24, r1
 676:	08 95       	ret

00000678 <__fp_inf>:
 678:	97 f9       	bld	r25, 7
 67a:	9f 67       	ori	r25, 0x7F	; 127
 67c:	80 e8       	ldi	r24, 0x80	; 128
 67e:	70 e0       	ldi	r23, 0x00	; 0
 680:	60 e0       	ldi	r22, 0x00	; 0
 682:	08 95       	ret

00000684 <__fp_nan>:
 684:	9f ef       	ldi	r25, 0xFF	; 255
 686:	80 ec       	ldi	r24, 0xC0	; 192
 688:	08 95       	ret

0000068a <__fp_pscA>:
 68a:	00 24       	eor	r0, r0
 68c:	0a 94       	dec	r0
 68e:	16 16       	cp	r1, r22
 690:	17 06       	cpc	r1, r23
 692:	18 06       	cpc	r1, r24
 694:	09 06       	cpc	r0, r25
 696:	08 95       	ret

00000698 <__fp_pscB>:
 698:	00 24       	eor	r0, r0
 69a:	0a 94       	dec	r0
 69c:	12 16       	cp	r1, r18
 69e:	13 06       	cpc	r1, r19
 6a0:	14 06       	cpc	r1, r20
 6a2:	05 06       	cpc	r0, r21
 6a4:	08 95       	ret

000006a6 <__fp_round>:
 6a6:	09 2e       	mov	r0, r25
 6a8:	03 94       	inc	r0
 6aa:	00 0c       	add	r0, r0
 6ac:	11 f4       	brne	.+4      	; 0x6b2 <__fp_round+0xc>
 6ae:	88 23       	and	r24, r24
 6b0:	52 f0       	brmi	.+20     	; 0x6c6 <__fp_round+0x20>
 6b2:	bb 0f       	add	r27, r27
 6b4:	40 f4       	brcc	.+16     	; 0x6c6 <__fp_round+0x20>
 6b6:	bf 2b       	or	r27, r31
 6b8:	11 f4       	brne	.+4      	; 0x6be <__fp_round+0x18>
 6ba:	60 ff       	sbrs	r22, 0
 6bc:	04 c0       	rjmp	.+8      	; 0x6c6 <__fp_round+0x20>
 6be:	6f 5f       	subi	r22, 0xFF	; 255
 6c0:	7f 4f       	sbci	r23, 0xFF	; 255
 6c2:	8f 4f       	sbci	r24, 0xFF	; 255
 6c4:	9f 4f       	sbci	r25, 0xFF	; 255
 6c6:	08 95       	ret

000006c8 <__fp_split3>:
 6c8:	57 fd       	sbrc	r21, 7
 6ca:	90 58       	subi	r25, 0x80	; 128
 6cc:	44 0f       	add	r20, r20
 6ce:	55 1f       	adc	r21, r21
 6d0:	59 f0       	breq	.+22     	; 0x6e8 <__fp_splitA+0x10>
 6d2:	5f 3f       	cpi	r21, 0xFF	; 255
 6d4:	71 f0       	breq	.+28     	; 0x6f2 <__fp_splitA+0x1a>
 6d6:	47 95       	ror	r20

000006d8 <__fp_splitA>:
 6d8:	88 0f       	add	r24, r24
 6da:	97 fb       	bst	r25, 7
 6dc:	99 1f       	adc	r25, r25
 6de:	61 f0       	breq	.+24     	; 0x6f8 <__fp_splitA+0x20>
 6e0:	9f 3f       	cpi	r25, 0xFF	; 255
 6e2:	79 f0       	breq	.+30     	; 0x702 <__fp_splitA+0x2a>
 6e4:	87 95       	ror	r24
 6e6:	08 95       	ret
 6e8:	12 16       	cp	r1, r18
 6ea:	13 06       	cpc	r1, r19
 6ec:	14 06       	cpc	r1, r20
 6ee:	55 1f       	adc	r21, r21
 6f0:	f2 cf       	rjmp	.-28     	; 0x6d6 <__fp_split3+0xe>
 6f2:	46 95       	lsr	r20
 6f4:	f1 df       	rcall	.-30     	; 0x6d8 <__fp_splitA>
 6f6:	08 c0       	rjmp	.+16     	; 0x708 <__fp_splitA+0x30>
 6f8:	16 16       	cp	r1, r22
 6fa:	17 06       	cpc	r1, r23
 6fc:	18 06       	cpc	r1, r24
 6fe:	99 1f       	adc	r25, r25
 700:	f1 cf       	rjmp	.-30     	; 0x6e4 <__fp_splitA+0xc>
 702:	86 95       	lsr	r24
 704:	71 05       	cpc	r23, r1
 706:	61 05       	cpc	r22, r1
 708:	08 94       	sec
 70a:	08 95       	ret

0000070c <__fp_zero>:
 70c:	e8 94       	clt

0000070e <__fp_szero>:
 70e:	bb 27       	eor	r27, r27
 710:	66 27       	eor	r22, r22
 712:	77 27       	eor	r23, r23
 714:	cb 01       	movw	r24, r22
 716:	97 f9       	bld	r25, 7
 718:	08 95       	ret

0000071a <__mulsf3>:
 71a:	0e 94 a0 03 	call	0x740	; 0x740 <__mulsf3x>
 71e:	0c 94 53 03 	jmp	0x6a6	; 0x6a6 <__fp_round>
 722:	0e 94 45 03 	call	0x68a	; 0x68a <__fp_pscA>
 726:	38 f0       	brcs	.+14     	; 0x736 <__mulsf3+0x1c>
 728:	0e 94 4c 03 	call	0x698	; 0x698 <__fp_pscB>
 72c:	20 f0       	brcs	.+8      	; 0x736 <__mulsf3+0x1c>
 72e:	95 23       	and	r25, r21
 730:	11 f0       	breq	.+4      	; 0x736 <__mulsf3+0x1c>
 732:	0c 94 3c 03 	jmp	0x678	; 0x678 <__fp_inf>
 736:	0c 94 42 03 	jmp	0x684	; 0x684 <__fp_nan>
 73a:	11 24       	eor	r1, r1
 73c:	0c 94 87 03 	jmp	0x70e	; 0x70e <__fp_szero>

00000740 <__mulsf3x>:
 740:	0e 94 64 03 	call	0x6c8	; 0x6c8 <__fp_split3>
 744:	70 f3       	brcs	.-36     	; 0x722 <__mulsf3+0x8>

00000746 <__mulsf3_pse>:
 746:	95 9f       	mul	r25, r21
 748:	c1 f3       	breq	.-16     	; 0x73a <__mulsf3+0x20>
 74a:	95 0f       	add	r25, r21
 74c:	50 e0       	ldi	r21, 0x00	; 0
 74e:	55 1f       	adc	r21, r21
 750:	62 9f       	mul	r22, r18
 752:	f0 01       	movw	r30, r0
 754:	72 9f       	mul	r23, r18
 756:	bb 27       	eor	r27, r27
 758:	f0 0d       	add	r31, r0
 75a:	b1 1d       	adc	r27, r1
 75c:	63 9f       	mul	r22, r19
 75e:	aa 27       	eor	r26, r26
 760:	f0 0d       	add	r31, r0
 762:	b1 1d       	adc	r27, r1
 764:	aa 1f       	adc	r26, r26
 766:	64 9f       	mul	r22, r20
 768:	66 27       	eor	r22, r22
 76a:	b0 0d       	add	r27, r0
 76c:	a1 1d       	adc	r26, r1
 76e:	66 1f       	adc	r22, r22
 770:	82 9f       	mul	r24, r18
 772:	22 27       	eor	r18, r18
 774:	b0 0d       	add	r27, r0
 776:	a1 1d       	adc	r26, r1
 778:	62 1f       	adc	r22, r18
 77a:	73 9f       	mul	r23, r19
 77c:	b0 0d       	add	r27, r0
 77e:	a1 1d       	adc	r26, r1
 780:	62 1f       	adc	r22, r18
 782:	83 9f       	mul	r24, r19
 784:	a0 0d       	add	r26, r0
 786:	61 1d       	adc	r22, r1
 788:	22 1f       	adc	r18, r18
 78a:	74 9f       	mul	r23, r20
 78c:	33 27       	eor	r19, r19
 78e:	a0 0d       	add	r26, r0
 790:	61 1d       	adc	r22, r1
 792:	23 1f       	adc	r18, r19
 794:	84 9f       	mul	r24, r20
 796:	60 0d       	add	r22, r0
 798:	21 1d       	adc	r18, r1
 79a:	82 2f       	mov	r24, r18
 79c:	76 2f       	mov	r23, r22
 79e:	6a 2f       	mov	r22, r26
 7a0:	11 24       	eor	r1, r1
 7a2:	9f 57       	subi	r25, 0x7F	; 127
 7a4:	50 40       	sbci	r21, 0x00	; 0
 7a6:	9a f0       	brmi	.+38     	; 0x7ce <__mulsf3_pse+0x88>
 7a8:	f1 f0       	breq	.+60     	; 0x7e6 <__mulsf3_pse+0xa0>
 7aa:	88 23       	and	r24, r24
 7ac:	4a f0       	brmi	.+18     	; 0x7c0 <__mulsf3_pse+0x7a>
 7ae:	ee 0f       	add	r30, r30
 7b0:	ff 1f       	adc	r31, r31
 7b2:	bb 1f       	adc	r27, r27
 7b4:	66 1f       	adc	r22, r22
 7b6:	77 1f       	adc	r23, r23
 7b8:	88 1f       	adc	r24, r24
 7ba:	91 50       	subi	r25, 0x01	; 1
 7bc:	50 40       	sbci	r21, 0x00	; 0
 7be:	a9 f7       	brne	.-22     	; 0x7aa <__mulsf3_pse+0x64>
 7c0:	9e 3f       	cpi	r25, 0xFE	; 254
 7c2:	51 05       	cpc	r21, r1
 7c4:	80 f0       	brcs	.+32     	; 0x7e6 <__mulsf3_pse+0xa0>
 7c6:	0c 94 3c 03 	jmp	0x678	; 0x678 <__fp_inf>
 7ca:	0c 94 87 03 	jmp	0x70e	; 0x70e <__fp_szero>
 7ce:	5f 3f       	cpi	r21, 0xFF	; 255
 7d0:	e4 f3       	brlt	.-8      	; 0x7ca <__mulsf3_pse+0x84>
 7d2:	98 3e       	cpi	r25, 0xE8	; 232
 7d4:	d4 f3       	brlt	.-12     	; 0x7ca <__mulsf3_pse+0x84>
 7d6:	86 95       	lsr	r24
 7d8:	77 95       	ror	r23
 7da:	67 95       	ror	r22
 7dc:	b7 95       	ror	r27
 7de:	f7 95       	ror	r31
 7e0:	e7 95       	ror	r30
 7e2:	9f 5f       	subi	r25, 0xFF	; 255
 7e4:	c1 f7       	brne	.-16     	; 0x7d6 <__mulsf3_pse+0x90>
 7e6:	fe 2b       	or	r31, r30
 7e8:	88 0f       	add	r24, r24
 7ea:	91 1d       	adc	r25, r1
 7ec:	96 95       	lsr	r25
 7ee:	87 95       	ror	r24
 7f0:	97 f9       	bld	r25, 7
 7f2:	08 95       	ret

000007f4 <sin>:
 7f4:	9f 93       	push	r25
 7f6:	0e 94 04 04 	call	0x808	; 0x808 <__fp_rempio2>
 7fa:	0f 90       	pop	r0
 7fc:	07 fc       	sbrc	r0, 7
 7fe:	ee 5f       	subi	r30, 0xFE	; 254
 800:	0c 94 2d 04 	jmp	0x85a	; 0x85a <__fp_sinus>
 804:	0c 94 42 03 	jmp	0x684	; 0x684 <__fp_nan>

00000808 <__fp_rempio2>:
 808:	0e 94 6c 03 	call	0x6d8	; 0x6d8 <__fp_splitA>
 80c:	d8 f3       	brcs	.-10     	; 0x804 <sin+0x10>
 80e:	e8 94       	clt
 810:	e0 e0       	ldi	r30, 0x00	; 0
 812:	bb 27       	eor	r27, r27
 814:	9f 57       	subi	r25, 0x7F	; 127
 816:	f0 f0       	brcs	.+60     	; 0x854 <__fp_rempio2+0x4c>
 818:	2a ed       	ldi	r18, 0xDA	; 218
 81a:	3f e0       	ldi	r19, 0x0F	; 15
 81c:	49 ec       	ldi	r20, 0xC9	; 201
 81e:	06 c0       	rjmp	.+12     	; 0x82c <__fp_rempio2+0x24>
 820:	ee 0f       	add	r30, r30
 822:	bb 0f       	add	r27, r27
 824:	66 1f       	adc	r22, r22
 826:	77 1f       	adc	r23, r23
 828:	88 1f       	adc	r24, r24
 82a:	28 f0       	brcs	.+10     	; 0x836 <__fp_rempio2+0x2e>
 82c:	b2 3a       	cpi	r27, 0xA2	; 162
 82e:	62 07       	cpc	r22, r18
 830:	73 07       	cpc	r23, r19
 832:	84 07       	cpc	r24, r20
 834:	28 f0       	brcs	.+10     	; 0x840 <__fp_rempio2+0x38>
 836:	b2 5a       	subi	r27, 0xA2	; 162
 838:	62 0b       	sbc	r22, r18
 83a:	73 0b       	sbc	r23, r19
 83c:	84 0b       	sbc	r24, r20
 83e:	e3 95       	inc	r30
 840:	9a 95       	dec	r25
 842:	72 f7       	brpl	.-36     	; 0x820 <__fp_rempio2+0x18>
 844:	80 38       	cpi	r24, 0x80	; 128
 846:	30 f4       	brcc	.+12     	; 0x854 <__fp_rempio2+0x4c>
 848:	9a 95       	dec	r25
 84a:	bb 0f       	add	r27, r27
 84c:	66 1f       	adc	r22, r22
 84e:	77 1f       	adc	r23, r23
 850:	88 1f       	adc	r24, r24
 852:	d2 f7       	brpl	.-12     	; 0x848 <__fp_rempio2+0x40>
 854:	90 48       	sbci	r25, 0x80	; 128
 856:	0c 94 43 04 	jmp	0x886	; 0x886 <__fp_mpack_finite>

0000085a <__fp_sinus>:
 85a:	ef 93       	push	r30
 85c:	e0 ff       	sbrs	r30, 0
 85e:	07 c0       	rjmp	.+14     	; 0x86e <__fp_sinus+0x14>
 860:	a2 ea       	ldi	r26, 0xA2	; 162
 862:	2a ed       	ldi	r18, 0xDA	; 218
 864:	3f e0       	ldi	r19, 0x0F	; 15
 866:	49 ec       	ldi	r20, 0xC9	; 201
 868:	5f eb       	ldi	r21, 0xBF	; 191
 86a:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <__addsf3x>
 86e:	0e 94 53 03 	call	0x6a6	; 0x6a6 <__fp_round>
 872:	0f 90       	pop	r0
 874:	03 94       	inc	r0
 876:	01 fc       	sbrc	r0, 1
 878:	90 58       	subi	r25, 0x80	; 128
 87a:	e8 e6       	ldi	r30, 0x68	; 104
 87c:	f0 e0       	ldi	r31, 0x00	; 0
 87e:	0c 94 4f 04 	jmp	0x89e	; 0x89e <__fp_powsodd>

00000882 <__fp_mpack>:
 882:	9f 3f       	cpi	r25, 0xFF	; 255
 884:	31 f0       	breq	.+12     	; 0x892 <__fp_mpack_finite+0xc>

00000886 <__fp_mpack_finite>:
 886:	91 50       	subi	r25, 0x01	; 1
 888:	20 f4       	brcc	.+8      	; 0x892 <__fp_mpack_finite+0xc>
 88a:	87 95       	ror	r24
 88c:	77 95       	ror	r23
 88e:	67 95       	ror	r22
 890:	b7 95       	ror	r27
 892:	88 0f       	add	r24, r24
 894:	91 1d       	adc	r25, r1
 896:	96 95       	lsr	r25
 898:	87 95       	ror	r24
 89a:	97 f9       	bld	r25, 7
 89c:	08 95       	ret

0000089e <__fp_powsodd>:
 89e:	9f 93       	push	r25
 8a0:	8f 93       	push	r24
 8a2:	7f 93       	push	r23
 8a4:	6f 93       	push	r22
 8a6:	ff 93       	push	r31
 8a8:	ef 93       	push	r30
 8aa:	9b 01       	movw	r18, r22
 8ac:	ac 01       	movw	r20, r24
 8ae:	0e 94 8d 03 	call	0x71a	; 0x71a <__mulsf3>
 8b2:	ef 91       	pop	r30
 8b4:	ff 91       	pop	r31
 8b6:	0e 94 63 04 	call	0x8c6	; 0x8c6 <__fp_powser>
 8ba:	2f 91       	pop	r18
 8bc:	3f 91       	pop	r19
 8be:	4f 91       	pop	r20
 8c0:	5f 91       	pop	r21
 8c2:	0c 94 8d 03 	jmp	0x71a	; 0x71a <__mulsf3>

000008c6 <__fp_powser>:
 8c6:	df 93       	push	r29
 8c8:	cf 93       	push	r28
 8ca:	1f 93       	push	r17
 8cc:	0f 93       	push	r16
 8ce:	ff 92       	push	r15
 8d0:	ef 92       	push	r14
 8d2:	df 92       	push	r13
 8d4:	7b 01       	movw	r14, r22
 8d6:	8c 01       	movw	r16, r24
 8d8:	68 94       	set
 8da:	06 c0       	rjmp	.+12     	; 0x8e8 <__fp_powser+0x22>
 8dc:	da 2e       	mov	r13, r26
 8de:	ef 01       	movw	r28, r30
 8e0:	0e 94 a0 03 	call	0x740	; 0x740 <__mulsf3x>
 8e4:	fe 01       	movw	r30, r28
 8e6:	e8 94       	clt
 8e8:	a5 91       	lpm	r26, Z+
 8ea:	25 91       	lpm	r18, Z+
 8ec:	35 91       	lpm	r19, Z+
 8ee:	45 91       	lpm	r20, Z+
 8f0:	55 91       	lpm	r21, Z+
 8f2:	a6 f3       	brts	.-24     	; 0x8dc <__fp_powser+0x16>
 8f4:	ef 01       	movw	r28, r30
 8f6:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <__addsf3x>
 8fa:	fe 01       	movw	r30, r28
 8fc:	97 01       	movw	r18, r14
 8fe:	a8 01       	movw	r20, r16
 900:	da 94       	dec	r13
 902:	69 f7       	brne	.-38     	; 0x8de <__fp_powser+0x18>
 904:	df 90       	pop	r13
 906:	ef 90       	pop	r14
 908:	ff 90       	pop	r15
 90a:	0f 91       	pop	r16
 90c:	1f 91       	pop	r17
 90e:	cf 91       	pop	r28
 910:	df 91       	pop	r29
 912:	08 95       	ret

00000914 <_exit>:
 914:	f8 94       	cli

00000916 <__stop_program>:
 916:	ff cf       	rjmp	.-2      	; 0x916 <__stop_program>
